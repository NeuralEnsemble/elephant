REMAINING TODOS:
-write test functions for all utility functions:
-for testing tridi_inverse_iteration: include a test for the running time
-compare convolve with scipy's fftconvolve
-for tridisolve: compare to analytical solution
-warning should raise a warning
-adaptive_weights: test cases where invalid optional arguments are given.
-for jackknifed_functions: trivial input to determine variance


Dependency tree:
Function					Used? Tested?

freq_response       		+	-	*sig, multi_taper_csd, tapered_spectra, utils.adaptive_weights, mtm_cross_spectrum
multi_taper_psd     		+	+	tapered_spectra, utils.adaptive_weights, utils.jackknifed_sdf_variance, mtm_cross_spectrum
mtm_cross_spectrum			+	-
tapered_spectra				+	-	utils.remove_bias, dpss_windows, *fftpack
dpss_windows        		+	+	*interpolate, *linalg, utils.tridi_inverse_iteration, utils.autocorr
get_spectra_bi      		+	-	get_spectra
get_spectra         		+	+	*spectral, multi_taper_csd, spectral._welch, utils.circle_to_hz

normalize_coherence			#	#
normal_coherence_to_unit	#	#
expected_jk_variance		#	#
jackknifed_sdf_variance		+	-	-> adaptive_weights
jackknifed_coh_variance		#	#	-> normalize_coherence
adaptive_weights			+	-
tridisolve					+	-
tridi_inverse_iteration		+	+	-> tridisolve
remove_bias					+	+
crosscov					+  (*)	-> fftconvolve
crosscorr					#	#
autocov						+	*
autocorr					+	*	-> autocov -> crosscov
fftconvolve				   (+) (-)
circle_to_hz				+  (-)
ar_generator			   (#) (#)