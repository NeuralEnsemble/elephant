dist: xenial
language: python
sudo: false

addons:
   apt:
     update: true


matrix:
  include:
    - name: "conda 2.7"
      python: 2.7
      env: DISTRIB="conda"
      before_install: sed -i 's/conda-forge/conda/g' requirements/environment.yml

    - name: "pip 2.7"
      python: 2.7
      env: DISTRIB="pip"

    - name: "pip 3.5"
      python: 3.5
      env: DISTRIB="pip"

    - name: "pip 3.6 requirements-extras"
      python: 3.6
      env: DISTRIB="pip"
      before_install: sudo apt install -y libopenmpi-dev openmpi-bin
      before_script:
        - pip install -r requirements/requirements-extras.txt
        - pip install mpi4py
      script: mpiexec -n 1 python -m mpi4py.futures -m nose --with-coverage --cover-package=elephant
      after_success: coveralls || echo "coveralls failed"

    - name: "conda 3.7"
      python: 3.7
      env: DISTRIB="conda"

    - name: "conda 3.8"
      python: 3.8
      env: DISTRIB="conda"

    - name: "pip 3.8"
      python: 3.8
      env: DISTRIB="pip"

    - name: "docs"
      python: 3.6
      env: DISTRIB="conda"
      before_install: sudo apt install -y libopenmpi-dev openmpi-bin
      before_script:
        - conda install -c conda-forge pandoc
        - pip install -r requirements/requirements-docs.txt
        - pip install -r requirements/requirements-tutorials.txt
        - pip install -r requirements/requirements-extras.txt
        - pip install mpi4py
        - sed -i -E "s/nbsphinx_execute *=.*/nbsphinx_execute = 'always'/g" doc/conf.py
      script: cd doc && make html

install:
  - if [[ "${DISTRIB}" == "conda" ]];
    then
      py_major=${TRAVIS_PYTHON_VERSION:0:1};
      wget https://repo.continuum.io/miniconda/Miniconda${py_major}-latest-Linux-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      source "$HOME/miniconda/etc/profile.d/conda.sh";
      conda config --set always_yes yes;
      conda update conda;
      sed -i "s/python>=[0-9]\.[0-9]/python=${TRAVIS_PYTHON_VERSION}/g" requirements/environment.yml;
      sed -i '/mpi4py/d' requirements/environment.yml;
      conda env create -f requirements/environment.yml;
      conda activate elephant;
      pip list;
    else
      pip install -r requirements/requirements.txt;
    fi

  - pip -V
  - pip install -r requirements/requirements-tests.txt
  - pip install coverage coveralls
  - python setup.py install
  - python -c "from elephant.spade import HAVE_FIM; assert HAVE_FIM"
  - pip list
  - python --version

script:
  nosetests --with-coverage --cover-package=elephant
