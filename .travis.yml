dist: xenial
language: python
sudo: false

addons:
   apt:
     update: true

env:
  DISTRIB="conda"

matrix:
  include:
    - name: "conda 2.7"
      python: 2.7

    - name: "pip 2.7"
      python: 2.7
      env: DISTRIB="pip"

    - name: "conda 3.5"
      python: 3.5

    - name: "conda 3.6"
      python: 3.6

    - name: "pip 3.6"
      python: 3.6
      env: DISTRIB="pip"

    - name: "conda 3.6 extras"
      # test requirements-extras
      python: 3.6
      before_install: sudo apt install -y libopenmpi-dev
      before_script: pip install -r requirements-extras.txt
      script: mpiexec -n 1 nosetests --with-coverage --cover-package=elephant

    - name: "conda 3.7"
      python: 3.7

install:
  - if [[ "${DISTRIB}" == "conda" ]];
    then
      export MINICONDA_PATH=${HOME}/miniconda;
      export PATH=${MINICONDA_PATH}/bin:${PATH};
      wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p ${MINICONDA_PATH};
      conda config --set always_yes yes;
      conda update conda;
      conda create --name elephant_env python=${TRAVIS_PYTHON_VERSION};
      source activate elephant_env;
      conda install mkl;
      conda config --append channels conda-forge;
      sed '/^neo/d' requirements.txt > requirements-conda.txt;
      conda install --file requirements-conda.txt;
      conda install -c conda-forge python-neo;
      pip list;
    else
      pip install -r requirements.txt;
    fi

  - pip -V
  - pip install coverage coveralls nose
  - pip install .
  - pip list
  - python --version

script:
  nosetests --with-coverage --cover-package=elephant

after_success:
  coveralls || echo "coveralls failed"
